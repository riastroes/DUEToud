// <auto-generated />
using DUET.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DUET.Migrations
{
    [DbContext(typeof(DUETContext))]
    partial class DUETContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("DUET.Models.Design", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Blue");

                    b.Property<int>("DPI");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Green");

                    b.Property<int>("Height");

                    b.Property<int>("Likes");

                    b.Property<int>("MemberId");

                    b.Property<string>("Name");

                    b.Property<int>("Red");

                    b.Property<bool>("Saved");

                    b.Property<bool>("Shared");

                    b.Property<int>("ViewHeight");

                    b.Property<int>("ViewWidth");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Designs");
                });

            modelBuilder.Entity("DUET.Models.Inspiration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("DPIH");

                    b.Property<float>("DPIV");

                    b.Property<int>("Height");

                    b.Property<string>("Src");

                    b.Property<string>("Title");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("Inspirations");
                });

            modelBuilder.Entity("DUET.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Visits");

                    b.Property<string>("Zipcode");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("DUET.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BTW");

                    b.Property<bool>("Confirmed");

                    b.Property<decimal>("DeliveryCost");

                    b.Property<string>("DeliveryType");

                    b.Property<int>("DesignId");

                    b.Property<bool>("Fabric");

                    b.Property<int>("MemberId");

                    b.Property<decimal>("Meters");

                    b.Property<decimal>("OrderCost");

                    b.Property<DateTime>("OrderDate");

                    b.Property<DateTime>("PayDate");

                    b.Property<bool>("Payed");

                    b.Property<bool>("Photo");

                    b.Property<string>("Photosize");

                    b.Property<bool>("Processed");

                    b.Property<DateTime>("ProcessedDate");

                    b.Property<bool>("Ready");

                    b.Property<DateTime>("ReadyDate");

                    b.Property<bool>("Sample");

                    b.Property<bool>("Shipped");

                    b.Property<DateTime>("ShippedDate");

                    b.Property<decimal>("Total");

                    b.HasKey("Id");

                    b.HasIndex("DesignId");

                    b.HasIndex("MemberId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DUET.Models.Proces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DesignId");

                    b.Property<int>("Index");

                    b.Property<int>("StampId");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("Id");

                    b.HasIndex("DesignId");

                    b.HasIndex("StampId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("DUET.Models.Stamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Blue");

                    b.Property<int>("DesignId");

                    b.Property<int>("Green");

                    b.Property<int>("Height");

                    b.Property<int>("InspirationHeight");

                    b.Property<int>("InspirationId");

                    b.Property<int>("InspirationWidth");

                    b.Property<int>("Red");

                    b.Property<float>("Rotate");

                    b.Property<float>("Scale");

                    b.Property<string>("Shape");

                    b.Property<string>("Type");

                    b.Property<bool>("Used");

                    b.Property<int>("Width");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("Id");

                    b.HasIndex("DesignId");

                    b.ToTable("Stamps");
                });

            modelBuilder.Entity("DUET.Models.Design", b =>
                {
                    b.HasOne("DUET.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DUET.Models.Order", b =>
                {
                    b.HasOne("DUET.Models.Design", "Design")
                        .WithMany()
                        .HasForeignKey("DesignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DUET.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DUET.Models.Proces", b =>
                {
                    b.HasOne("DUET.Models.Design", "Design")
                        .WithMany("Processes")
                        .HasForeignKey("DesignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DUET.Models.Stamp", "Stamp")
                        .WithMany()
                        .HasForeignKey("StampId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DUET.Models.Stamp", b =>
                {
                    b.HasOne("DUET.Models.Design")
                        .WithMany("Stamps")
                        .HasForeignKey("DesignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
